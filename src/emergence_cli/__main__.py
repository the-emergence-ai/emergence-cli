import os, pathlib, shutil, textwrap
import click
from importlib import resources
from . import __version__

@click.group()
@click.version_option(__version__)
def cli():
    """Emergence command‑line tool."""
    pass


@cli.command()
@click.argument("name")
def init(name: str):
    """
    Scaffold a **hello‑agent** in a new folder called NAME.
    """
    target = pathlib.Path(name).resolve()
    if target.exists():
        click.secho("Folder already exists — aborting.", fg="red")
        raise SystemExit(1)

    # === minimal file templates ============================================
    agent_py = textwrap.dedent(
        f"""\
        \"\"\"Echo agent generated by Emergence CLI.\"\"\"
        import json, sys

        def handle(msg: dict) -> dict:
            \"\"\"Very first prototype — just echoes HELP prompts.\"\"\"
            if msg.get("verb") == "HELP":
                return {{
                    "id": msg["id"],
                    "from": "{name}",
                    "to": msg["from"],
                    "verb": "DONE",
                    "data": {{"echo": msg["data"]}}
                }}
            raise ValueError("Unsupported verb")

        if __name__ == "__main__":
            incoming = json.load(sys.stdin)
            json.dump(handle(incoming), sys.stdout)
        """
    )

    dockerfile = textwrap.dedent(
        """\
        FROM python:3.11-slim
        WORKDIR /app
        COPY agent.py .
        CMD ["python", "agent.py"]
        """
    )

    readme = f"# {name}\n\nMinimal echo agent generated by **Emergence CLI**."

    # === write files ========================================================
    target.mkdir()
    (target / "agent.py").write_text(agent_py)
    (target / "Dockerfile").write_text(dockerfile)
    (target / "README.md").write_text(readme)

    click.secho(f"✅  Scaffolding created in ./{name}", fg="green")
